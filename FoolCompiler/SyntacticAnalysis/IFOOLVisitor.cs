//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FOOL.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using System.Collections.Generic;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FOOLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IFOOLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>singleExp</c>
	/// labeled alternative in <see cref="FOOLParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleExp([NotNull] FOOLParser.SingleExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>letInExp</c>
	/// labeled alternative in <see cref="FOOLParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetInExp([NotNull] FOOLParser.LetInExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>classExp</c>
	/// labeled alternative in <see cref="FOOLParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassExp([NotNull] FOOLParser.ClassExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.let"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLet([NotNull] FOOLParser.LetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.classdec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassdec([NotNull] FOOLParser.ClassdecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.letVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetVar([NotNull] FOOLParser.LetVarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.vardec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVardec([NotNull] FOOLParser.VardecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.varasm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarasm([NotNull] FOOLParser.VarasmContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.fun"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFun([NotNull] FOOLParser.FunContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.dec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDec([NotNull] FOOLParser.DecContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.met"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMet([NotNull] FOOLParser.MetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] FOOLParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp([NotNull] FOOLParser.ExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] FOOLParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] FOOLParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intVal</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntVal([NotNull] FOOLParser.IntValContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolVal</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolVal([NotNull] FOOLParser.BoolValContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>baseExp</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaseExp([NotNull] FOOLParser.BaseExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifExp</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExp([NotNull] FOOLParser.IfExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>varId</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarId([NotNull] FOOLParser.VarIdContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funExp</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunExp([NotNull] FOOLParser.FunExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>methExp</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethExp([NotNull] FOOLParser.MethExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>newExp</c>
	/// labeled alternative in <see cref="FOOLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewExp([NotNull] FOOLParser.NewExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.functioncall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncall([NotNull] FOOLParser.FunctioncallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>asmStm</c>
	/// labeled alternative in <see cref="FOOLParser.stm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsmStm([NotNull] FOOLParser.AsmStmContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifStm</c>
	/// labeled alternative in <see cref="FOOLParser.stm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStm([NotNull] FOOLParser.IfStmContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FOOLParser.stms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStms([NotNull] FOOLParser.StmsContext context);
}
